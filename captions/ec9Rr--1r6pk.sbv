0:00:00.240,0:00:04.960
imagine you're creating a retail app that sells 
electronics you'll first create a list view that

0:00:04.960,0:00:10.400
shows all the products and then a detailed view 
that shows more information about each product

0:00:10.400,0:00:14.480
there's a one-to-one relationship between 
each product in the list view that shows

0:00:14.480,0:00:19.680
the name image and price and the detailed view 
of the product where you show more information

0:00:19.680,0:00:24.960
such as multiple images description 
manufacturer dimensions weight and so on

0:00:24.960,0:00:29.360
in a relational database you might have a table 
called products and each row in the table would

0:00:29.360,0:00:33.680
contain enough information to populate the 
list view then you'll have another table called

0:00:33.680,0:00:39.520
product details that contains more information 
used to populate the detailed view in redis

0:00:39.520,0:00:44.080
similar to a relational database you can create a 
collection called products and another collection

0:00:44.080,0:00:49.920
called product details here i've imported the 
redisome library and i'm modeling the products

0:00:49.920,0:00:54.960
collection with fields like name image 
and price meant for the product list view

0:00:54.960,0:00:59.680
i also have a product details collection 
with product id description manufacturer

0:00:59.680,0:01:04.800
dimensions weight and a list of images 
with redis ohm we can index it like this

0:01:06.080,0:01:12.400
and here's how you can query the list view lastly 
here's how you query the detailed view but you can

0:01:12.400,0:01:17.040
improve this by simply embedding the product 
details within the products collection then

0:01:17.040,0:01:22.480
when you query you only query for the fields you 
need for a particular view this way you can easily

0:01:22.480,0:01:28.160
keep all your data in one place this is called the 
embedded pattern here are the new models using the

0:01:28.160,0:01:34.240
embedded pattern here's how we can index it and 
here's how we can query the list view note that

0:01:34.240,0:01:40.560
we're returning three fields name image and price 
lastly here's how we can query the detail view

0:01:41.440,0:01:46.240
looking at our database in redis insight what 
you get when you use the embedded pattern

0:01:46.240,0:01:53.840
is all of your data in one place so we have our 
details embedded within the product collection

0:01:58.160,0:01:58.660
you
